@using CarRental_DTO;
@model IEnumerable<VehicleDTO>

@{
    ViewData["Title"] = "Vehicles";
    VehicleDTO? FilterVehicle = (VehicleDTO?)ViewData["FilterVehicle"];
    IEnumerable<VehicleManufacturerDTO>? vehicleManufacturers = (IEnumerable<VehicleManufacturerDTO>?)ViewData["VehicleManufacturers"];
    IEnumerable<VehicleTypeDTO>? vehicleTypes = (IEnumerable<VehicleTypeDTO>?)ViewData["VehicleTypes"];
    <p>
        <a asp-action="Create" class="btn btn-outline-primary">Create New</a>
    </p>
}

@*Form for searching Vehicles*@
<form asp-controller="Vehicle" asp-action="SearchVehicles" method="get">
    <div class="input-group">

        <input id="vehicleName" name="VehicleName" value="@FilterVehicle?.VehicleName" type="text" class="form-control rounded" style="margin:5px;" placeholder="VehicleName" aria-label="Search" aria-describedby="search-addon" />

        <select id="vehicleManufacturerId" name="VehicleManufacturerId" class="form-control form-control rounded" style="margin:5px;">
            <option selected value="">Vehicle Manufacturers...</option>
                @foreach (VehicleManufacturerDTO vehicleManufacturer in vehicleManufacturers ?? new List<VehicleManufacturerDTO>())
                {
                    if (FilterVehicle?.VehicleManufacturerId == vehicleManufacturer.VehicleManufacturerId)
                    {
                        <option selected value="@vehicleManufacturer.VehicleManufacturerId">@vehicleManufacturer.VehicleManufacturerName</option>
                    }else{
                        <option value="@vehicleManufacturer.VehicleManufacturerId">@vehicleManufacturer.VehicleManufacturerName</option>
                    }
                }
            </select>

        <select id="vehicleTypeId" name="VehicleTypeId" class="form-control form-control rounded" style="margin:5px;">
            <option selected value="">Vehicle Types...</option>
                @foreach (VehicleTypeDTO vehicleType in vehicleTypes ?? new List<VehicleTypeDTO>())
                {
                    if (FilterVehicle?.VehicleTypeId == vehicleType.VehicleTypeId)
                    {
                        <option selected value="@vehicleType.VehicleTypeId">@vehicleType.VehicleTypeName</option>
                    }else
                    {
                        <option value="@vehicleType.VehicleTypeId">@vehicleType.VehicleTypeName</option>
                    }
                }
            </select>

        <button type="submit" class="btn btn-outline-primary">Search</button>
    </div>
</form>
<table class="table align-middle mb-0 bg-white table-hover">
    <thead class="bg-light">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.VehicleName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VehicleManufacturer.VehicleManufacturerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VehicleType.VehicleTypeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateManufactured)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PricePerDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Color)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.VehicleName)
                </td>
                <td>
                    @if (item.VehicleManufacturer != null)
                    {
                        @Html.DisplayFor(modelItem => item.VehicleManufacturer.VehicleManufacturerName)
                    }
                </td>
                <td>
                    @if (item.VehicleType != null)
                    {
                        @Html.DisplayFor(modelItem => item.VehicleType.VehicleTypeName)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateManufactured)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PricePerDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Color)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.VehicleId" class="btn btn-outline-warning">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.VehicleId" class="btn btn-outline-info">Details</a>
                    <a asp-action="CreateForClientOrVehicle" asp-controller="Reservation" class="btn btn-outline-success" asp-route-vehicleId="@item.VehicleId">Create a Reservation</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@*Pagination*@
<div>
    @{
        await Html.RenderPartialAsync("_Pagination", new ViewDataDictionary(this.ViewData) { { "ActionName", "Index" }, { "ControllerName", "Vehicle" } });
    }
</div>
